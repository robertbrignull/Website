extends ../_base

block append css
  link(rel='stylesheet', href='/passphrase/passphrase.css')

block append scripts
  script(src='/data/passphrase/passphrase.js')

block content
  h1(class='margin-below') Passphrase generator

  p Passphrases (eg: case-knee-bat-grape) are great. In almost every sense they are far better than passwords made from 6-8 hard to remember symbols, eg: a6h%S\9F. They are both stronger and so harder for computers to crack, and easier to remember by humans. Their strength comes from their length which gives then a high entropy.

  p So to help me I made my own passphrase generator. This is going against the normal advice in security that that it's dangerous to implement things yourself as you may get it wrong, but for something as simple as this it's fine.

  p This implementation picks as many random words as you want from a list of 7512 3-5 letter english words. The addition of capital letters and trailing numbers is optional but is enabled by default.
  
  p The minimum length of a passphrase generated with the default settings is 20 characters and uses a large range of characters, so if you tried to naively brute force one there would be 63^20 = 2^120 possibilitie. Even if you know the format then there are still 7512^4 * 10000 = 2^64 possibilities.

  div(id='output-line', class='flexbox wrap')
    button(id='generate') Generate!
    div(id='passphrase', class='output-label')

  div(class='flexbox wrap')
    div(id='numwordsinputwrapper')
      | Number of words: 
      input(id='numwordsinput', type='number', min='1', max='9', value='4')
    div(id='usecapsinputwrapper')
      | Use capital letters: 
      input(id='usecapsinput', type='checkbox', checked)
    div(id='numnumsinputwrapper')
      | Append how many numbers: 
      input(id='numnumsinput', type='number', min='0', max='9', value='4')
